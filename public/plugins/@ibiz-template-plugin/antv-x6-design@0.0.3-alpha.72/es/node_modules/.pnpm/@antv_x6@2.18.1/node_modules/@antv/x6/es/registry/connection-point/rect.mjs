import '../../../../../../../@antv_x6-common@2.0.16/node_modules/@antv/x6-common/es/index.mjs';
import { bbox } from './bbox.mjs';
import { getStrokeWidth, offset } from './util.mjs';
import { call } from '../../../../../../../@antv_x6-common@2.0.16/node_modules/@antv/x6-common/es/function/function.mjs';

/**
 * Places the connection point at the intersection between the
 * link path end segment and the element's unrotated bbox.
 */
const rect = function (line, view, magnet, options, type) {
    const cell = view.cell;
    const angle = cell.isNode() ? cell.getAngle() : 0;
    if (angle === 0) {
        return call(bbox, this, line, view, magnet, options, type);
    }
    const bboxRaw = view.getUnrotatedBBoxOfElement(magnet);
    if (options.stroked) {
        bboxRaw.inflate(getStrokeWidth(magnet) / 2);
    }
    const center = bboxRaw.getCenter();
    const lineRaw = line.clone().rotate(angle, center);
    const intersections = lineRaw.setLength(1e6).intersect(bboxRaw);
    const p = intersections && intersections.length
        ? lineRaw.start.closest(intersections).rotate(-angle, center)
        : line.end;
    return offset(p, line.start, options.offset);
};

export { rect };
